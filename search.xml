<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Lens shading成因</title>
      <link href="/2021/07/25/lens-shading%E6%88%90%E5%9B%A0/"/>
      <url>/2021/07/25/lens-shading%E6%88%90%E5%9B%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>偶然看到Edmund Optics一篇关于lens shading成因的介绍，原文<a href="https://www.edmundoptics.com/knowledge-center/application-notes/imaging/sensor-relative-illumination-roll-off-and-vignetting/">Relative Illumination, Roll-Off, and Vignetting</a>，建议直接看原文，以下是个人总结。</p><h2 id="Relative-Illumination-RI"><a href="#Relative-Illumination-RI" class="headerlink" title="Relative Illumination (RI)"></a>Relative Illumination (RI)</h2><p>RI是描述暗角效应的一种方式，表示边角亮度与中心点比值，一般sensor中心点的illumibation最高，RI为100%，越往边角亮度越暗，RI越小。<br><img src="/2021/07/25/lens-shading%E6%88%90%E5%9B%A0/1.png" alt="RI curves"><br><img src="/2021/07/25/lens-shading%E6%88%90%E5%9B%A0/2.png" alt="Shading"></p><p>从图中可以看出：</p><ul><li>光圈越大，RI的衰减越多。RI是相对值，光圈大时绝对进光量是越大的。</li><li>sensor尺寸越大，暗角效应约明显。</li></ul><p>RI是vignetting和roll-off综合产生的结果，而两者的成因不同，以下分别介绍。</p><h2 id="Vignetting"><a href="#Vignetting" class="headerlink" title="Vignetting"></a>Vignetting</h2><p>光线不能穿过整个透镜组，在镜片边缘被截断，导致sensor边角接受到的光线较中心偏少，光圈越大，该效应约明显。<br><img src="/2021/07/25/lens-shading%E6%88%90%E5%9B%A0/3.png" alt="light rays are clipped"></p><h2 id="Roll-off"><a href="#Roll-off" class="headerlink" title="Roll-off"></a>Roll-off</h2><p>Roll-off产生原因为电磁辐射准则（cosine-to-the-fourth law），此处可以参考<a href="https://www.coursera.org/lecture/optical-efficiency-and-resolution/cos-4th-law-GG6kh">cos4 law</a>，也就是说主光线角度越大，sensor上pixel位置接受的能量越少。<br><img src="/2021/07/25/lens-shading%E6%88%90%E5%9B%A0/4.png" alt="chief ray angle"><br><img src="/2021/07/25/lens-shading%E6%88%90%E5%9B%A0/5.png" alt="RI decays with chief raw angel increases"></p><p>现在的sensor上都有微透镜使之接收更多光线，但入射角发生变化，也会引起Roll-off现象，如下图，入射角倾斜，光线经过微透镜无法全部落在sensor的感光区域。<br><img src="/2021/07/25/lens-shading%E6%88%90%E5%9B%A0/6.png"></p>]]></content>
      
      
      <categories>
          
          <category> ISP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lens </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中的字符与编码</title>
      <link href="/2021/07/24/python_str_encode/"/>
      <url>/2021/07/24/python_str_encode/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>“字符”的最佳定义是Unicode字符，Python3中str对象获得的都是Unicode字符，每一个字符都有对应的unicode码。编码是从Unicode码和字节序列之间转换时用的算法，如utf-8、gb2312等等，下面一一解释。</p><h2 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h2><p>我们可能最早接触过的字符编码可能大学课本里的ASCII码，它是上世纪60年代美国制定的一套编码，对英文字符和二进制数定义标准，如下表所示。<br><img src="/2021/07/24/python_str_encode/ascii.jpg" alt="ASII码表"></p><h2 id="Unicode码"><a href="#Unicode码" class="headerlink" title="Unicode码"></a>Unicode码</h2><p>世界上不同国画家的语言符号多种多样，使用ASCII码远远不够，于是就有了unicode，对每一个符号都赋予一个独一无二的编码。unicode码使用4-6个16进制数表示，并加前缀“U+”，例如字母A的unicode码是U+0041，汉字严的unicode码是U+4E25。查询字符的unicode码可以参考：<a href="https://unicode.yunser.com/unicode">https://unicode.yunser.com/unicode</a></p><h2 id="字符编解码"><a href="#字符编解码" class="headerlink" title="字符编解码"></a>字符编解码</h2><p>如果我们用unicode码表示字符，假设每个常用字符使用4字节码位，这就会导致有些字符实际上不需要占用4字节的空间造成存储空间的浪费，例如英文字母，因此需要字符编解码。<br>编码：unicode码转换为字节序列的过程<br>解码：字节序列转为unicode码的过程<br>编解码规则有很多，例如utf-8、GB2312、GBK、utf-16le等等，此处不深究这些编码方式的具体细节。</p><h2 id="Python中的字符编码"><a href="#Python中的字符编码" class="headerlink" title="Python中的字符编码"></a>Python中的字符编码</h2><p>python3的解释器默认使用utf-8编码，所以写代码时，编辑器也要使用utf-8编码。如果需要设置编码格式，需要在.py文件头第一行添加<code># -*- coding: UTF-8 -*-</code>, 一般情况下都使用utf-8编码。</p><p>字节值可能会使用下列三种不同的方式显示：</p><ul><li>可打印的ASCII范围内的字节，使用ASCII字符本身</li><li>制表符、换行符、回车符和\对应的字节，使用转义序列\t \n \r等等</li><li>其他字节值，使用十六进制转义序列</li></ul><p>说了这么多，举个例子吧，当我们用utf-8编码在编辑器中编辑好.py文件，python解释器会用utf-8解释运行。<code>s</code>字符串包含了英文字母和汉字，python使用unicode码获取字符串中字符，用<code>encode()</code>编码成字节序列<code>b</code>，使用print输出，abcd由于是ascii码范围内字符，还是显示为abcd，而汉字则显示为16进制的字符序列，<code>\x</code>表示十六进制的字符型变量。<code>c</code>使用正确解码方式解码后，依旧可以获得正确的字符串，而<code>d</code>使用错误解码方式，则会报错。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: UTF-8 -*-</span>s <span class="token operator">=</span> <span class="token string">'abcd一二三四'</span>b <span class="token operator">=</span> s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>c <span class="token operator">=</span> b<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>d <span class="token operator">=</span> b<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'gb2312'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出</span>b<span class="token string">'abcd\xe4\xb8\x80\xe4\xba\x8c\xe4\xb8\x89\xe5\x9b\x9b'</span>abcd一二三四UnicodeDecodeError<span class="token punctuation">:</span> <span class="token string">'gb2312'</span> codec can't decode byte <span class="token number">0x80</span> <span class="token keyword">in</span> position <span class="token number">6</span><span class="token punctuation">:</span> illegal multibyte sequence<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-字典键值不存在时的处理</title>
      <link href="/2021/06/27/python%E5%AD%97%E5%85%B8%E9%94%AE%E5%80%BC%E4%B8%8D%E5%AD%98%E5%9C%A8%E6%83%85%E5%86%B5/"/>
      <url>/2021/06/27/python%E5%AD%97%E5%85%B8%E9%94%AE%E5%80%BC%E4%B8%8D%E5%AD%98%E5%9C%A8%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>python中经常会出现字典键值不存在的情况，可以用<code>get(), setdefault(), defaultdict</code>等方式处理</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>示例1：</p><pre class="line-numbers language-python"><code class="language-python">my_dict <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span>b <span class="token operator">=</span> my_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>my_dict不存在键<code>&#39;b&#39;</code>, 使用<code>dict.get()</code>处理键不存在情况会返回一个默认值，但是不会向<code>my_dict</code>添加新的键值对</p><p>示例2：</p><pre class="line-numbers language-python"><code class="language-python">my_dict <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span>b <span class="token operator">=</span> my_dict<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>my_dict<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用<code>dict.setdefault()</code>则会添加新的键值对</p><p>对于需要处理键不存在的情况，使用<code>collections.defaultdict</code>处理更加自然一些, 参考：<br><a href="https://docs.python.org/2/library/collections.html">https://docs.python.org/2/library/collections.html</a><br>示例3：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> collectionsmy_dict <span class="token operator">=</span> collections<span class="token punctuation">.</span>defaultdict<span class="token punctuation">(</span>list<span class="token punctuation">)</span>x <span class="token operator">=</span> my_dict<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>键值不存在时，表达式<code>my_dict[&#39;a&#39;]</code>按照一下步骤执行：</p><ul><li>调用<code>list()</code>创建一个新对象</li><li>把新对象作为值，向my_dict添加新的键值对</li><li>返回该对象的引用</li></ul><p>也可以使用自定义类，例如示例4：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> collections<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span>        self<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span>my_dict <span class="token operator">=</span> collections<span class="token punctuation">.</span>defaultdict<span class="token punctuation">(</span>A<span class="token punctuation">)</span>x <span class="token operator">=</span> my_dict<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-用*复制列表</title>
      <link href="/2021/06/26/Python%E7%94%A8-%E5%88%9D%E5%A7%8B%E5%8C%96%E7%94%A8%E5%88%97%E8%A1%A8%E7%BB%84%E6%88%90%E7%9A%84%E5%88%97%E8%A1%A8/"/>
      <url>/2021/06/26/Python%E7%94%A8-%E5%88%9D%E5%A7%8B%E5%8C%96%E7%94%A8%E5%88%97%E8%A1%A8%E7%BB%84%E6%88%90%E7%9A%84%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>python中可以用*方便地对列表复制，但是当列表中包含列表则需注意</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>在python中如果我们想对一个已有的列表复制多次，很容易想到：</p><pre class="line-numbers language-python"><code class="language-python">l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>x <span class="token operator">=</span> l <span class="token operator">*</span> <span class="token number">5</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可见，*将l复制多次，构建一个新对象，修改l不会影响x的值，但是对于<font color="green">列表的列表</font>就需要注意：</p><pre class="line-numbers language-python"><code class="language-python">l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>x <span class="token operator">=</span> l <span class="token operator">*</span> <span class="token number">5</span>l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">print</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改l的值影响到x的值，这是因为l中的元素其实是对列表的引用，x复制的也是引用</p><p>再来看看用*初始化列表，该示例来自《流畅的Python》</p><p>示例1：</p><pre class="line-numbers language-python"><code class="language-python">board <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>board<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'X'</span><span class="token comment" spellcheck="true"># 输出</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'X'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例2：</p><pre class="line-numbers language-python"><code class="language-python">board <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">3</span>board<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'X'</span><span class="token comment" spellcheck="true"># 输出</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'X'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'X'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'X'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例2对列表的引用复制了3次</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
